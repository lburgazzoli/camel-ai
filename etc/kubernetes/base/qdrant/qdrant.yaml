---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: camel-ai-qdrant
  labels:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: camel-ai-qdrant
data:
  initialize.sh: |
    #!/bin/sh
    SET_INDEX=${HOSTNAME##*-}
    echo "Starting initializing for pod $SET_INDEX"
    if [ "$SET_INDEX" = "0" ]; then
      exec ./entrypoint.sh --uri 'http://qdrant-0.camel-ai-headless:6335'
    else
      exec ./entrypoint.sh --bootstrap 'http://qdrant-0.camel-ai-headless:6335' --uri 'http://qdrant-'"$SET_INDEX"'.camel-ai-headless:6335'
    fi
    
  production.yaml: |
    cluster:
      consensus:
        tick_period_ms: 100
      enabled: true
      p2p:
        port: 6335
---
apiVersion: v1
kind: Service
metadata:
  name: camel-ai-qdrant-headless
  labels:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
spec:
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 6333
      targetPort: 6333
      protocol: TCP
    - name: grpc
      port: 6334
      targetPort: 6334
      protocol: TCP
    - name: p2p
      port: 6335
      targetPort: 6335
      protocol: TCP
  selector:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
---
apiVersion: v1
kind: Service
metadata:
  name: camel-ai-qdrant
  labels:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 6333
      targetPort: 6333
      protocol: TCP
    - name: grpc
      port: 6334
      targetPort: 6334
      protocol: TCP
    - name: p2p
      port: 6335
      targetPort: 6335
      protocol: TCP
  selector:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: camel-ai-qdrant
  labels:
    app: camel-ai-qdrant
    app.kubernetes.io/name: camel-ai-qdrant
    app.kubernetes.io/instance: camel-ai-qdrant
spec:
  replicas: 1
  podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: camel-ai-qdrant
      app.kubernetes.io/name: camel-ai-qdrant
      app.kubernetes.io/instance: camel-ai-qdrant
  serviceName: camel-ai-qdrant-headless
  template:
    metadata:
      annotations:
      labels:
        app: camel-ai-qdrant
        app.kubernetes.io/name: camel-ai-qdrant
        app.kubernetes.io/instance: camel-ai-qdrant
    spec:
      initContainers:
      - name: ensure-storage-dir-ownership
        image: "docker.io/qdrant/qdrant:v1.7.3"
        command:
          - chown
          - -R
          - 1000:3000
          - /qdrant/storage
        volumeMounts:
          - name: camel-ai-qdrant-storage
            mountPath: /qdrant/storage
      containers:
        - name: camel-ai-qdrant
          image: "docker.io/qdrant/qdrant:v1.7.3"
          imagePullPolicy: IfNotPresent
          env:
            - name: camel-ai-qdrant_INIT_FILE_PATH
              value: /qdrant/init/.qdrant-initialized
          command: ["/bin/bash", "-c"]
          args:
          - ./config/initialize.sh
          ports:
            - name: http
              containerPort: 6333
              protocol: TCP
            - name: grpc
              containerPort: 6334
              protocol: TCP
            - name: p2p
              containerPort: 6335
              protocol: TCP
          readinessProbe:
            httpGet:
              path: "/readyz"
              port: 6333
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          resources:
            {}
          securityContext:
            #allowPrivilegeEscalation: false
            privileged: false
            #readOnlyRootFilesystem: true
            #runAsGroup: 2000
            runAsNonRoot: true
            #runAsUser: 1000
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "3"]
          volumeMounts:
          - name: camel-ai-qdrant-storage
            mountPath: /qdrant/storage
          - name: camel-ai-qdrant-config
            mountPath: /qdrant/config/initialize.sh
            subPath: initialize.sh
          - name: camel-ai-qdrant-config
            mountPath: /qdrant/config/production.yaml
            subPath: production.yaml
          - name: camel-ai-qdrant-snapshots
            mountPath: /qdrant/snapshots
          - name: camel-ai-qdrant-init
            mountPath: /qdrant/init
      securityContext:
        fsGroup: 3000
        fsGroupChangePolicy: Always
      serviceAccountName: camel-ai-qdrant
      volumes:
        - name: camel-ai-qdrant-config
          configMap:
            name: camel-ai-qdrant
            defaultMode: 0755
        - name: camel-ai-qdrant-snapshots
          emptyDir: {}
        - name: camel-ai-qdrant-init
          emptyDir: {}
  volumeClaimTemplates:
    - metadata:
        name: camel-ai-qdrant-storage
        labels:
          app: camel-ai-qdrant
      spec:
        storageClassName: 
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "10Gi"
